<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorials on compgen.io</title>
    <link>http://compgen.io/tutorials/</link>
    <description>Recent content in Tutorials on compgen.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Jul 2017 13:01:00 -0500</lastBuildDate>
    
	<atom:link href="http://compgen.io/tutorials/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker containers with CGPipe</title>
      <link>http://compgen.io/tutorials/cgpipe-docker/</link>
      <pubDate>Tue, 18 Jul 2017 13:01:00 -0500</pubDate>
      
      <guid>http://compgen.io/tutorials/cgpipe-docker/</guid>
      <description>CGPipe is a powerful tool for executeing bioinformatics data analysis workflows. Much of its power derives from its inherent flexibility. In addition to supporting a variety of batch scheduling environments (SGE, SLURM, PBS), it can support different modes of executing jobs. The way we&amp;rsquo;ll explore executing jobs within Docker containers is to use the HEREDOC pattern.
Docker Docker is a platform for running programs within a container. The container lets you build and ship programs with all of their dependencies intact.</description>
    </item>
    
    <item>
      <title>FASTQ Pre-processing</title>
      <link>http://compgen.io/tutorials/fastq-preprocessing/</link>
      <pubDate>Tue, 15 Dec 2015 00:54:57 -0500</pubDate>
      
      <guid>http://compgen.io/tutorials/fastq-preprocessing/</guid>
      <description>The first step in NGS analysis is pre-processing your FASTQ files. The following tutorial uses ngsutilsj fastq-filter to process and filter FASTQ files.
Sequence QC tools It&amp;rsquo;s important to measure certain quality control metrics with FASTQ files. You should run the same QC checks against the files before and after pre- processing. This will help you assess the quality of your data and measure how well the pre-processing is working.</description>
    </item>
    
    <item>
      <title>File formats</title>
      <link>http://compgen.io/tutorials/formats/</link>
      <pubDate>Tue, 15 Dec 2015 00:54:57 -0500</pubDate>
      
      <guid>http://compgen.io/tutorials/formats/</guid>
      <description>Sequencing formats 
FASTA # FASTA files are the de-facto standard for storing and sharing DNA/RNA/amino acid sequences. It is a text-file format with a header line followed by one or more lines of sequence. The header line starts with a &amp;lsquo;&amp;gt;&amp;rsquo; character, which may be used for parsing the file. The remainder of the header line consists of a name, optionally followed by a comment. The name and comment are separated by whitespace.</description>
    </item>
    
    <item>
      <title>RNA-Seq workflow (with STAR)</title>
      <link>http://compgen.io/tutorials/rnaseq-star/</link>
      <pubDate>Tue, 15 Dec 2015 00:54:57 -0500</pubDate>
      
      <guid>http://compgen.io/tutorials/rnaseq-star/</guid>
      <description>Experimental design The first step in getting good results from an RNA-Seq experiment is choosing a good experimental design. This means that you need to have enough replicates, with sufficient sequencing depth to be able to answer your research question.
Depth For differential gene expression, I recommend having at least 4 biological replicates for each condition with a minimum of 20M reads per sample (30M recommended). Additionally, we&amp;rsquo;ve found that pair-end sequencing produces more uniquely aligned reads than single-end sequencing.</description>
    </item>
    
  </channel>
</rss>